/**
 *
 * @author David Beltran
 * File: VehicleUI.java
 * This file contains the VehicleUI class which is responsible for
 * displaying and running the car show application's Vehicle GUI
 */
package edu.du.beltrandavid.view;

import edu.du.beltrandavid.controllor.vehiclecontroller.VehicleUIController;
import edu.du.beltrandavid.model.business.manager.carshowmanager.CarShowManager;
import edu.du.beltrandavid.model.business.manager.carshowownermanager.CarShowOwnerManager;
import edu.du.beltrandavid.model.business.manager.ownermanager.OwnerManager;
import edu.du.beltrandavid.model.business.manager.vehiclemanager.VehicleManager;
import edu.du.beltrandavid.model.domain.Owner;
import edu.du.beltrandavid.model.domain.Vehicle;
import edu.du.beltrandavid.model.domain.VehicleClassification;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Iterator;

public class VehicleUI extends javax.swing.JFrame {
  
  private OwnerManager ownerManager = null;
  private VehicleManager vehicleManager = null;
  private CarShowManager carShowManager = null;
  private CarShowOwnerManager carShowOwnerManager = null;
  private CarShowMainMenu carShowMainMenu = null;
  
  private final Container container = getContentPane();

  /**
   * Creates new form VehicleUI
   */
  public VehicleUI() {
    
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    Dimension windowSize = new Dimension((screenSize.width / 2) - 150, 
        (screenSize.height / 2) + 50);
    setPreferredSize(windowSize);
    setLocation(((screenSize.width - windowSize.width) / 2), 
        ((screenSize.height - windowSize.height) / 2));
    
    initComponents();
    setTitle("Vehicle Collection");
  }

  /**
   *
   * @param carShowMainMenu
   * @throws Exception
   */
  public VehicleUI(CarShowMainMenu carShowMainMenu) throws Exception {
    
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    Dimension windowSize = new Dimension((screenSize.width / 2) - 150, 
        (screenSize.height / 2) + 50);
    setPreferredSize(windowSize);
    setLocation(((screenSize.width - windowSize.width) / 2), 
        ((screenSize.height - windowSize.height) / 2));
    
    initComponents();
    setTitle("Vehicle Collection");
    
    this.carShowMainMenu = carShowMainMenu;
    ownerManager = carShowMainMenu.getOwnerManager();
    vehicleManager = carShowMainMenu.getVehicleManager();
    carShowManager = carShowMainMenu.getCarShowManager();
    carShowOwnerManager = carShowMainMenu.getCarShowOwnerManager();
    
    Iterator<Vehicle> itr = vehicleManager.getVehicles();
    ArrayList<Vehicle> vehicleArrayList = new ArrayList<>();
    while (itr.hasNext()) {
      vehicleArrayList.add((Vehicle) itr.next());
    }
    
    vehicleIdComboBox.removeAllItems();
    for (Vehicle vehicle : vehicleArrayList) {
      vehicleIdComboBox.addItem(vehicle.getVehicleId());
    }
    vehicleIdComboBox.setSelectedIndex(0);
    vehicleIdComboBox.setEditable(true);
    
    ownerIdComboBox.removeAllItems();
    populateOwnerIdComboBox();
    
    vehicleClassificationComboBox.removeAllItems();
    populateVehicleClassificationComboBox();
    vehicleClassificationComboBox.setSelectedIndex(0);
    
    VehicleUIController vehicleUIController = new VehicleUIController(this);
    
    addWindowListener(new WindowAdapter() {
      public void windowClosing(WindowEvent ev){
      }
    });
    carShowMainMenu.setVisible(true);
  }
  
  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    vehicleInformationHeader = new javax.swing.JLabel();
    vehicleIdLabel = new javax.swing.JLabel();
    ownerIdLabel = new javax.swing.JLabel();
    manufacturerLabel = new javax.swing.JLabel();
    manufacturerTextField = new javax.swing.JTextField();
    modelYearLabel = new javax.swing.JLabel();
    modelYearTextField = new javax.swing.JTextField();
    modelLabel = new javax.swing.JLabel();
    modelTextField = new javax.swing.JTextField();
    submodelLabel = new javax.swing.JLabel();
    submodelTextField = new javax.swing.JTextField();
    vehicleClassificationLabel = new javax.swing.JLabel();
    findVehicleButton = new javax.swing.JButton();
    addVehicleButton = new javax.swing.JButton();
    removeVehicleButton = new javax.swing.JButton();
    ownerIdComboBox = new javax.swing.JComboBox<>();
    isInsuredLabel = new javax.swing.JLabel();
    isInsuredCheckBox = new javax.swing.JCheckBox();
    vehicleIdComboBox = new javax.swing.JComboBox<>();
    vehicleClassificationComboBox = new javax.swing.JComboBox<>();
    vehicleMainMenuBar = new javax.swing.JMenuBar();
    fileVehicleMenuItem = new javax.swing.JMenu();
    exitVehicleMenuItem = new javax.swing.JMenuItem();
    editVehicleMenuItem = new javax.swing.JMenu();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    vehicleInformationHeader.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    vehicleInformationHeader.setText("Vehicle Information");
    vehicleInformationHeader.setToolTipText("");

    vehicleIdLabel.setText("Vehicle ID");
    vehicleIdLabel.setToolTipText("");

    ownerIdLabel.setText("Owner ID");
    ownerIdLabel.setToolTipText("");

    manufacturerLabel.setText("Manufacturer");
    manufacturerLabel.setToolTipText("");

    manufacturerTextField.setNextFocusableComponent(modelTextField);

    modelYearLabel.setText("Model Year");

    modelYearTextField.setFocusCycleRoot(true);
    modelYearTextField.setNextFocusableComponent(manufacturerTextField);

    modelLabel.setText("Model");

    modelTextField.setNextFocusableComponent(submodelTextField);

    submodelLabel.setText("Submodel");
    submodelLabel.setToolTipText("");

    vehicleClassificationLabel.setText("Vehicle Classifcation");

    findVehicleButton.setText("FIND");
    findVehicleButton.setToolTipText("Find selected vehicle");
    findVehicleButton.setNextFocusableComponent(addVehicleButton);

    addVehicleButton.setText("ADD");
    addVehicleButton.setToolTipText("Add Selected Vehicle");
    addVehicleButton.setNextFocusableComponent(removeVehicleButton);

    removeVehicleButton.setText("REMOVE");
    removeVehicleButton.setToolTipText("Remove Selected Vehicle");
    removeVehicleButton.setNextFocusableComponent(fileVehicleMenuItem);

    ownerIdComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    ownerIdComboBox.setNextFocusableComponent(isInsuredCheckBox);

    isInsuredLabel.setText("Insured");
    isInsuredLabel.setToolTipText("Does vehicle hold insurance?");

    isInsuredCheckBox.setText("Yes");
    isInsuredCheckBox.setToolTipText("Check box if vehicle is insured");
    isInsuredCheckBox.setNextFocusableComponent(findVehicleButton);

    vehicleIdComboBox.setEditable(true);
    vehicleIdComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    vehicleIdComboBox.setNextFocusableComponent(ownerIdComboBox);

    fileVehicleMenuItem.setText("File");
    fileVehicleMenuItem.setNextFocusableComponent(editVehicleMenuItem);

    exitVehicleMenuItem.setText("Exit");
    exitVehicleMenuItem.setToolTipText("Exit the System");
    fileVehicleMenuItem.add(exitVehicleMenuItem);

    vehicleMainMenuBar.add(fileVehicleMenuItem);

    editVehicleMenuItem.setText("Edit");
    editVehicleMenuItem.setNextFocusableComponent(modelYearTextField);
    vehicleMainMenuBar.add(editVehicleMenuItem);

    setJMenuBar(vehicleMainMenuBar);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(36, 36, 36)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                  .addGroup(layout.createSequentialGroup()
                    .addComponent(modelYearLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(18, 18, 18)
                    .addComponent(modelYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGroup(layout.createSequentialGroup()
                    .addComponent(manufacturerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(18, 18, 18)
                    .addComponent(manufacturerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                  .addGroup(layout.createSequentialGroup()
                    .addComponent(modelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(vehicleIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                  .addComponent(isInsuredLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(ownerIdLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
              .addGroup(layout.createSequentialGroup()
                .addComponent(findVehicleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addVehicleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
              .addGroup(layout.createSequentialGroup()
                .addComponent(vehicleClassificationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(vehicleClassificationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(layout.createSequentialGroup()
                .addComponent(submodelLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(submodelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(ownerIdComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(isInsuredCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(vehicleIdComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
              .addComponent(removeVehicleButton, javax.swing.GroupLayout.Alignment.TRAILING)))
          .addGroup(layout.createSequentialGroup()
            .addGap(231, 231, 231)
            .addComponent(vehicleInformationHeader)))
        .addContainerGap(36, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(25, 25, 25)
        .addComponent(vehicleInformationHeader)
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(modelYearLabel)
          .addComponent(modelYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(vehicleIdLabel)
          .addComponent(vehicleIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(manufacturerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(manufacturerLabel))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(modelLabel)
          .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(ownerIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(ownerIdLabel))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(submodelLabel)
          .addComponent(submodelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(isInsuredLabel)
          .addComponent(isInsuredCheckBox)
          .addComponent(vehicleClassificationLabel)
          .addComponent(vehicleClassificationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(findVehicleButton)
          .addComponent(addVehicleButton)
          .addComponent(removeVehicleButton))
        .addGap(53, 53, 53))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(VehicleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(VehicleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(VehicleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(VehicleUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new VehicleUI().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton addVehicleButton;
  private javax.swing.JMenu editVehicleMenuItem;
  private javax.swing.JMenuItem exitVehicleMenuItem;
  private javax.swing.JMenu fileVehicleMenuItem;
  private javax.swing.JButton findVehicleButton;
  private javax.swing.JCheckBox isInsuredCheckBox;
  private javax.swing.JLabel isInsuredLabel;
  private javax.swing.JLabel manufacturerLabel;
  private javax.swing.JTextField manufacturerTextField;
  private javax.swing.JLabel modelLabel;
  private javax.swing.JTextField modelTextField;
  private javax.swing.JLabel modelYearLabel;
  private javax.swing.JTextField modelYearTextField;
  private javax.swing.JComboBox<String> ownerIdComboBox;
  private javax.swing.JLabel ownerIdLabel;
  private javax.swing.JButton removeVehicleButton;
  private javax.swing.JLabel submodelLabel;
  private javax.swing.JTextField submodelTextField;
  private javax.swing.JComboBox<String> vehicleClassificationComboBox;
  private javax.swing.JLabel vehicleClassificationLabel;
  private javax.swing.JComboBox<String> vehicleIdComboBox;
  private javax.swing.JLabel vehicleIdLabel;
  private javax.swing.JLabel vehicleInformationHeader;
  private javax.swing.JMenuBar vehicleMainMenuBar;
  // End of variables declaration//GEN-END:variables

  /**
   * @param vehicle
   * Fills all fields with object attributes when find button is triggered
   */
  public void putVehicleInfo(Vehicle vehicle) {
    vehicleIdComboBox.setSelectedItem(vehicle.getVehicleId());
    ownerIdComboBox.setSelectedItem(vehicle.getOwnerId());
    modelYearTextField.setText(Integer.toString(vehicle.getModelYear()));
    manufacturerTextField.setText(vehicle.getManufacturer());
    modelTextField.setText(vehicle.getModel());
    submodelTextField.setText(vehicle.getSubmodel());
    vehicleClassificationComboBox.setSelectedItem(vehicle.getVehicleClassification().name());
    isInsuredCheckBox.setSelected(vehicle.getIsInsured());
  }
  
  /**
   * @return
   * Instantiates object and stores in collection when add button is triggered
   */
  public Vehicle getVehicleInfo() {
    Vehicle vehicle = new Vehicle();
    
    vehicle.setVehicleId((String) vehicleIdComboBox.getSelectedItem());
    vehicle.setOwnerId((String) ownerIdComboBox.getSelectedItem());
    vehicle.setModelYear(Integer.parseInt(modelYearTextField.getText()));
    vehicle.setManufacturer(manufacturerTextField.getText());
    vehicle.setModel(modelTextField.getText());
    vehicle.setSubmodel(submodelTextField.getText());
    vehicle.setVehicleClassification(VehicleClassification
        .valueOf((String) vehicleClassificationComboBox.getSelectedItem()));
    vehicle.setIsInsured(isInsuredCheckBox.isSelected());
    
    return vehicle;
  }
  
  /**
   * Empties all fields when remove button is triggered 
   */
  public void clearVehicleInfo() {
    vehicleIdComboBox.setSelectedIndex(0);
    ownerIdComboBox.setSelectedIndex(0);
    modelYearTextField.setText("");
    manufacturerTextField.setText("");
    modelTextField.setText("");
    submodelTextField.setText("");
    vehicleClassificationComboBox.setSelectedIndex(0);
    isInsuredCheckBox.setSelected(false);
  }
  
  /**
   * @throws Exception
   * Fills OwnerIdComboBox with persisted owner IDs
   */
  private void populateOwnerIdComboBox() throws Exception {
    Iterator<Owner> itr = ownerManager.getOwners();
    ArrayList<Owner> ownerArrayList = new ArrayList<>();
    while (itr.hasNext()) {
      ownerArrayList.add((Owner) itr.next());
    }
   
    ownerIdComboBox.removeAllItems();
    for (Owner owner: ownerArrayList) {
      ownerIdComboBox.addItem(owner.getOwnerId());
    }
    ownerIdComboBox.setSelectedIndex(0);
    ownerIdComboBox.setEditable(false);
  }

  /**
   * Fills VehicleClassificationComboBox with non-editable options 
   */
  private void populateVehicleClassificationComboBox() {
    vehicleClassificationComboBox.addItem("ANTIQUE");
    vehicleClassificationComboBox.addItem("CLASSIC");
    vehicleClassificationComboBox.addItem("MODERN");
  }
  
  /**
   *
   * @return
   */
  public OwnerManager getOwnerManager() {
    return ownerManager;
  }

  /**
   *
   * @return
   */
  public VehicleManager getVehicleManager() {
    return vehicleManager;
  }

  /**
   *
   * @return
   */
  public CarShowManager getCarShowManager() {
    return carShowManager;
  }

  /**
   *
   * @return
   */
  public CarShowOwnerManager getCarShowOwnerManager() {
    return carShowOwnerManager;
  }

  /**
   *
   * @return
   */
  public CarShowMainMenu getCarShowMainMenu() {
    return carShowMainMenu;
  }

  /**
   *
   * @return
   */
  public Container getContainer() {
    return container;
  }

  /**
   *
   * @return
   */
  public javax.swing.JButton getAddVehicleButton() {
    return addVehicleButton;
  }

  /**
   *
   * @return
   */
  public javax.swing.JMenu getEditVehicleMenuItem() {
    return editVehicleMenuItem;
  }

  /**
   *
   * @return
   */
  public javax.swing.JMenuItem getExitVehicleMenuItem() {
    return exitVehicleMenuItem;
  }

  /**
   *
   * @return
   */
  public javax.swing.JMenu getFileVehicleMenuItem() {
    return fileVehicleMenuItem;
  }

  /**
   *
   * @return
   */
  public javax.swing.JButton getFindVehicleButton() {
    return findVehicleButton;
  }

  /**
   *
   * @return
   */
  public javax.swing.JCheckBox getIsInsuredCheckBox() {
    return isInsuredCheckBox;
  }

  /**
   *
   * @return
   */
  public javax.swing.JLabel getIsInsuredLabel() {
    return isInsuredLabel;
  }

  /**
   *
   * @return
   */
  public javax.swing.JLabel getManufacturerLabel() {
    return manufacturerLabel;
  }

  /**
   *
   * @return
   */
  public javax.swing.JTextField getManufacturerTextField() {
    return manufacturerTextField;
  }

  /**
   *
   * @return
   */
  public javax.swing.JLabel getModelLabel() {
    return modelLabel;
  }

  /**
   *
   * @return
   */
  public javax.swing.JTextField getModelTextField() {
    return modelTextField;
  }

  /**
   *
   * @return
   */
  public javax.swing.JLabel getModelYearLabel() {
    return modelYearLabel;
  }

  /**
   *
   * @return
   */
  public javax.swing.JTextField getModelYearTextField() {
    return modelYearTextField;
  }

  /**
   *
   * @return
   */
  public javax.swing.JComboBox<String> getOwnerIdComboBox() {
    return ownerIdComboBox;
  }

  /**
   *
   * @return
   */
  public javax.swing.JLabel getOwnerIdLabel() {
    return ownerIdLabel;
  }

  /**
   *
   * @return
   */
  public javax.swing.JButton getRemoveVehicleButton() {
    return removeVehicleButton;
  }

  /**
   *
   * @return
   */
  public javax.swing.JLabel getSubmodelLabel() {
    return submodelLabel;
  }

  /**
   *
   * @return
   */
  public javax.swing.JTextField getSubmodelTextField() {
    return submodelTextField;
  }

  /**
   *
   * @return
   */
  public javax.swing.JLabel getVehicleClassificationLabel() {
    return vehicleClassificationLabel;
  }

  /**
   *
   * @return
   */
  public javax.swing.JComboBox<String> getVehicleClassificationComboBox() {
    return vehicleClassificationComboBox;
  }

  /**
   *
   * @return
   */
  public javax.swing.JComboBox<String> getVehicleIdComboBox() {
    return vehicleIdComboBox;
  }

  /**
   *
   * @return
   */
  public javax.swing.JLabel getVehicleIdLabel() {
    return vehicleIdLabel;
  }

  /**
   *
   * @return
   */
  public javax.swing.JLabel getVehicleInformationHeader() {
    return vehicleInformationHeader;
  }

  /**
   *
   * @return
   */
  public javax.swing.JMenuBar getVehicleMainMenuBar() {
    return vehicleMainMenuBar;
  }
}
